services:
  prometheus:
    image: prom/prometheus:v3.7.1
    container_name: prometheus
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus
      - ./prometheus/rules:/etc/prometheus/rules
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped
    networks:
      - monitoring_network

  loki:
    image: grafana/loki:3.5.7
    container_name: loki
    volumes:
      - ./loki/config/loki-config.yml:/etc/loki/loki-config.yml
      - ./loki/data:/loki/data
      - ./loki/wal:/loki/wal
    command: -config.file=/etc/loki/loki-config.yml
    restart: unless-stopped
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana:12.2.0
    container_name: grafana_monitoring
    volumes:
      - ./grafana/data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=newpassword123
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SERVER_ROOT_URL=http://84.21.191.54:8444/grafana/
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_DOMAIN=84.21.191.54
      - GF_SERVER_HTTP_PORT=3200
      - GF_METRICS_ENABLED=true
      - GF_METRICS_BASIC_AUTH_USERNAME=admin
      - GF_METRICS_BASIC_AUTH_PASSWORD=admin
    restart: unless-stopped
    networks:
      - monitoring_network

  node-exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node-exporter
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    restart: unless-stopped
    networks:
      - monitoring_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    privileged: true
    devices:
      - /dev/kmsg:/dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    restart: unless-stopped
    networks:
      - monitoring_network

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    volumes:
      - ./alertmanager/config:/etc/alertmanager
      - ./alertmanager/data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    networks:
      - monitoring_network

networks:
  monitoring_network:
    name: monitoring_network
    driver: bridge
